 struct ListNode* reverse(struct ListNode* head)
{
        struct ListNode*p = NULL, *q = NULL, *r = head;

        while(r!= NULL){
            p = q;
            q = r;
            r = r->next;
            q->next = p;
        }
        head = q;
        return head;
}

int pairSum(struct ListNode* head) {
    if(head == NULL){
            return -1;
        }

        if(head->next->next ==NULL){
            int sum = head->val + head->next->val;
            return sum;
        }

        struct ListNode *temp = head ,*s = head , *f = head->next;
        while(f!=NULL){
            f = f->next;
            if(f!=NULL){
                f = f->next;
                s = s->next;
            }
        }

        struct ListNode* second = reverse(s->next);
        s->next = second;
        struct  ListNode* first = head;

        int ans = INT_MIN;

        while(second != NULL){
            int data = first->val + second->val;
            ans = fmax(ans,data);
            first = first->next;
            second = second->next;
        }


        return ans;
}
